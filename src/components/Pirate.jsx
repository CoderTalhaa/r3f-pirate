/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/Pirate.gltf -o src/components/Pirate.jsx -r public 
*/

import React, { useContext, useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { DataContext } from "../context/DataContext";
import gsap from "gsap";

export function Pirate(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/models/Pirate.gltf");
  const { actions, names } = useAnimations(animations, group);

  const { activeData } = useContext(DataContext);

  useFrame((state, delta) => {
    if (group.current) {
      group.current.rotation.y += delta * 0.6;
    }
  });

  useEffect(() => {
    gsap.from(group.current.position, {
      x: 500,
      duration: 1.5,
      ease: "slow",
    });
  }, [activeData]);

  const animIndex = activeData.model.pose;
  useEffect(() => {
    actions[names[animIndex]].reset().play();
    return () => {
      actions[names[animIndex]].stop();
    };
  }, [animIndex]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="rig">
          <primitive object={nodes.root} />
          <primitive object={nodes["MCH-torsoparent"]} />
          <primitive object={nodes["MCH-hand_ikparentL"]} />
          <primitive object={nodes["MCH-upper_arm_ik_targetparentL"]} />
          <primitive object={nodes["MCH-hand_ikparentR"]} />
          <primitive object={nodes["MCH-upper_arm_ik_targetparentR"]} />
          <primitive object={nodes["MCH-foot_ikparentL"]} />
          <primitive object={nodes["MCH-thigh_ik_targetparentL"]} />
          <primitive object={nodes["MCH-foot_ikparentR"]} />
          <primitive object={nodes["MCH-thigh_ik_targetparentR"]} />
          <group name="Cube">
            <skinnedMesh
              name="Cube_1"
              geometry={nodes.Cube_1.geometry}
              material={materials.Material}
              skeleton={nodes.Cube_1.skeleton}
            />
            <skinnedMesh
              name="Cube_2"
              geometry={nodes.Cube_2.geometry}
              material={materials.Beard}
              skeleton={nodes.Cube_2.skeleton}
            >
              <meshStandardMaterial color={activeData.model.beard} />
            </skinnedMesh>
            <skinnedMesh
              name="Cube_3"
              geometry={nodes.Cube_3.geometry}
              material={materials.Jacket}
              skeleton={nodes.Cube_3.skeleton}
            >
              <meshStandardMaterial color={activeData.model.jacket} />
            </skinnedMesh>
            <skinnedMesh
              name="Cube_4"
              geometry={nodes.Cube_4.geometry}
              material={materials.Pants}
              skeleton={nodes.Cube_4.skeleton}
            >
              <meshStandardMaterial color={activeData.model.pants} />
            </skinnedMesh>
            <skinnedMesh
              name="Cube_5"
              geometry={nodes.Cube_5.geometry}
              material={materials.Eyes}
              skeleton={nodes.Cube_5.skeleton}
            >
              <meshStandardMaterial color={activeData.model.eyes} />
            </skinnedMesh>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/Pirate.gltf");
